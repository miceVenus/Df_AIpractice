```markdown
# Text Processing Application

这是一个简单的文本处理应用程序，使用 PyQt5 构建图形用户界面（GUI），并使用 MVC（Model-View-Controller）模式组织代码。

## 目录结构

```
/d:/1code/python/bachelor/grade 4/semester 1/Df_AIpractice/
    ├── 

controller.py


    ├── 

main.py


    ├── 

model.py


    ├── 

page.py


    ├── 

server.py


    └── README.md
```

## 文件说明

- `controller.py`：控制器模块，负责处理用户输入、与模型交互并更新视图。
- `main.py`：主程序入口，负责初始化应用程序并启动主事件循环。
- `model.py`：模型模块，包含文本处理的业务逻辑。
- `page.py`：视图模块，包含由 PyQt5 生成的用户界面代码。
- `server.py`：服务器模块，负责接收客户端请求并与后端模型进行对接。

## 安装和运行

### 先决条件

- Python 3.10.10
- PyQt5

### 安装依赖

使用以下命令安装所需的依赖：

```bash
pip install -r requirements.txt
```

### 运行应用程序

在终端中导航到项目目录并运行以下命令：

```bash
python main.py
```

### 运行服务器

在终端中导航到项目目录并运行以下命令：

```bash
python server.py
```

## 修改说明

在 model.py中的 ProcessTextIn和 ProcessUploadFile方法中实现具体的文本处理逻辑。你需要调用后端 API 来处理文本，并返回处理后的字符串。
修改server文件的DataProcess函数，使其能够正确调用模型的方法，并返回处理后的文本。
修改model文件中的IP地址和端口号，使其能够正确连接到服务器。

## 配置环境

使用 Python 3.10.10 环境，并安装所需的依赖：

```bash
pip install -r requirements.txt
```

## 贡献

上述readme部分由copilot生成，后续会根据实际情况进行修改。